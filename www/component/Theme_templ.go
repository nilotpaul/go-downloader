// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.707
package component

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func Theme() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, templ_7745c5c3_W io.Writer) (templ_7745c5c3_Err error) {
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templ_7745c5c3_W.(*bytes.Buffer)
		if !templ_7745c5c3_IsBuffer {
			templ_7745c5c3_Buffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templ_7745c5c3_Buffer)
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<label class=\"grid cursor-pointer max-w-fit place-items-center\"><input id=\"theme_toggle\" type=\"checkbox\" value=\"dark\" onclick=\"handleToggle(this)\" class=\"toggle bg-base-content col-span-2 col-start-1 row-start-1\"><script type=\"text/javascript\">\n  \t\t      let toggleElem = document.getElementById(\"theme_toggle\");\n\t\t\t  const theme = localStorage.getItem(\"theme\") ?? null;\n\t\t\t  toggleElem.checked = theme === \"dark\";\n \t\t</script><script type=\"text/javascript\">\n  \t\t      function handleToggle(e) {\n\t\t\t\tconst newTheme = e.checked ? \"dark\" : \"garden\"\n\t\t\t\tdocument.documentElement.setAttribute(\"data-theme\", newTheme);\n\t\t\t\tlocalStorage.setItem(\"theme\", newTheme);\n\t\t\t  }\n \t\t</script><svg class=\"stroke-base-100 fill-base-100 col-start-1 row-start-1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><circle cx=\"12\" cy=\"12\" r=\"5\"></circle> <path d=\"M12 1v2M12 21v2M4.2 4.2l1.4 1.4M18.4 18.4l1.4 1.4M1 12h2M21 12h2M4.2 19.8l1.4-1.4M18.4 5.6l1.4-1.4\"></path></svg> <svg class=\"stroke-base-100 fill-base-100 col-start-2 row-start-1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><path d=\"M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z\"></path></svg></label>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		if !templ_7745c5c3_IsBuffer {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteTo(templ_7745c5c3_W)
		}
		return templ_7745c5c3_Err
	})
}
